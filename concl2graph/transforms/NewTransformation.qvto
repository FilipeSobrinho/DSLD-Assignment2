modeltype ConCL uses 'http://www.example.org/concl';
modeltype Graph uses 'http://dsldesign.tue.nl/graph';

transformation ConCL2Graph(in concl : ConCL, out graph : Graph);

main() {
    concl.rootObjects()[ConCL::Model].consolepack->collect(cp | cp.map consolepack2graph());
}

mapping ConCL::ConsolePack::consolepack2graph() : Graph::Graph {
    name := self.name;
    nodes := self.consolecomponent->map console2display();
    nodes += self.map consolepackname2node();
    
    // Create a node for the Controller Colour
    var controllerColourNode := object Graph::Node {
        label := 'Controller Colour';
        shape := Graph::Shape::BOX;
    };
    nodes += controllerColourNode;
    
    // Declare and initialize a variable for the controller index
    var index : Integer := 1;
    // Use a while loop to iterate over the controller components
    while (index <= self.controllercomponent->size()) {
        // Get the controller at the current index
        var controller := self.controllercomponent->at(index);
        // Map the controller to a node and add it to the nodes
        var controllerNode := controller.map controller2node(index);
        nodes += controllerNode;
        
        // Create an edge from the ConsolePack node to the Controller node
        var controllerEdge := object Graph::Edge {
            style := Graph::Style::SOLID;
            target := controllerNode;
        };
        self.map consolepackname2node().outEdges += controllerEdge;
        
        // Create a node for the controller color
        var colorNode := object Graph::Node {
            label := controller.color.toString();
            shape := Graph::Shape::BOX;
        };
        nodes += colorNode;
        
        // Create an edge from the Controller Colour node to the Color node
        var colorEdge := object Graph::Edge {
            style := Graph::Style::SOLID;
            target := colorNode;
        };
        controllerColourNode.outEdges += colorEdge;
        
        // Create an edge from the Color node to the Controller node
        var colorToControllerEdge := object Graph::Edge {
            style := Graph::Style::SOLID;
            target := controllerNode;
        };
        colorNode.outEdges += colorToControllerEdge;
        
        // Increment the index
        index := index + 1;
    }
}

mapping ConCL::ConsolePack::consolepackname2node() : Graph::Node {
    label := self.name;
    shape := Graph::Shape::BOX;
}

mapping ConCL::Console::console2display() : Graph::Node {

}

mapping ConCL::Controller::controller2node(index: Integer) : Graph::Node {
    label := 'controller' + index.toString();
    shape := Graph::Shape::BOX;
}
